Branch: Blog generation.

	- Keep all feeds configuration inside pub.conf
	- Blog building

Use YAML parser for pages metadata (separated from content by \n\n; no boring dashes!)

Test installation on Ubuntu and clean virtualenv.

Readme:

	- Move documentation to documentation. Readme should be short.
	- Update configuration description.
	- Describe init command
	- Rename renamed commands
	- EDITOR env var: start "" "C:\Program Files\SublimeText\sublime_text.exe"
	- Update parameters description:

	    # Default port value (overridable with command line param)
	    'port': 8000,

	    # Amount of seconds between starting local web server
	    # and opening a browser
	    'browser_opening_delay': 2.0,

	    # Default template name (overridable with page header 'template' parameter)
	    'template': 'default',

	    # Default author name (overridable with page header 'author' parmeter)
	    'author': '',

	    'minify_js': True,
	    'minify_css': True,
	    'minify_less': True,

	    # Minification commands: {source} is used in both for source file
	    # and {dest} is for processed output
	    'minify_js_cmd': "yuicompressor --type js --nomunge -o {dest} {source}",
	    'minify_css_cmd': "yuicompressor --type css -o {dest} {source}",

	    # Command to sync build_path to web server
	    'sync_cmd': '',

	    # Command to open an URL with a web browser
	    'run_browser_cmd': "start {url}",

	    # LESS compiler command ({source} and {dest} will be replaced)
	    'less_cmd': "lessc -x {source} > {dest}",

	    # A list of markdown extensions
	    'markdown_extensions': ['nl2br', 'grid', 'smartypants'],

	    # Text editor command (use {file} for file name to edit)
	    'editor_cmd': "$EDITOR '{file}'",

--- Next iteration

Add powered-by to default template.

Published field: yes/no (draft)

	- Don't build pages which status is draft.
	- Consider a command to switch draft/published status?

Image management:

	- Image management command(s).
	- No difference btw image and generic attachment.
	- Separated directory for attachments.
	- Publish on S3.
	- Markdown syntax sugar for <img>.

Post/page tags (there should be a search index).

Generate PDF versions for CV (link file defining name and location OR destination in metadata options)

	- http://www.verypdf.com/pdfcamp/convert-html-to-pdf.html
	- https://github.com/chrisglass/xhtml2pdf

Markdown extension to include text files (preprocessor).

	- Checkout Mustache (pystache) inclusion ability.
	- Generalized commands: {command: arguments}, e.g. {include: footer.md}

	It could be a separate markdown extension:

	{include:disclaimer.inc.md} — from the document directory
	{include:@disclaimer.md} — from the preconfigured path
	{include:footnotes.txt} — include plain text (include during postprocessing)

	Simple syntax:

	{{ fragment.txt }}

	To prevent fragments compillation as a separate pages, use '_' prefix. File name pattern could be configured with regex.

Markdown extension for QR.

Integrate Analytics.

Integrate Disqus.

Presentation.

	+ Domain.
	- Get The Picture.
	- Discussion/feedback thing.
	- Good example: http://middlemanapp.com
	- One more: http://cloudhead.io/toto
	- Post.

Some quotes:
	- %NAME% is a web publishing system for building small to medium-sized websites. — http://nanoc.stoneship.org/

Short readme and structured documentation @ readthedocs.org. http://read-the-docs.readthedocs.org/en/latest/getting_started.html

-- Unconsidered

Add --dry-run mode.

Implement calculated metadata (virtual @fields generated from actual metadata, content and everything). E.g. @wordscnt to get a number of words. @readindet for estimated reading time, etc.

Support http://bootswatch.com (describe the algorithm).
