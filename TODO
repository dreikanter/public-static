Blog generation:

- Blog building.
- Configurable feed source dir structure
- Configurable feed output dir structure (URLs)
- tidy -i --wrap 80 -o index.html
- Test installation on Ubuntu and clean virtualenv.
- RSS feed generation.
- ATOM feed generation.

Readme and documentation:

- Move documentation to documentation. Readme should be short.
- http://read-the-docs.readthedocs.org/en/latest/getting_started.html
- Update configuration description.
- Describe init command
- Rename renamed commands
- EDITOR env var: start "" "C:\Program Files\SublimeText\sublime_text.exe"
- About: PS is a web publishing system for building small to medium-sized websites
- Update parameters description:

     # Default port value (overridable with command line param)
     'port': 8000,

     # Amount of seconds between starting local web server
     # and opening a browser
     'browser_opening_delay': 2.0,

     # Default template name (overridable with page header 'template' parameter)
     'template': 'default',

     # Default author name (overridable with page header 'author' parmeter)
     'author': '',

     'minify_js': True,
     'minify_css': True,
     'minify_less': True,

     # Minification commands: {source} is used in both for source file
     # and {dest} is for processed output
     'minify_js_cmd': "yuicompressor --type js --nomunge -o {dest} {source}",
     'minify_css_cmd': "yuicompressor --type css -o {dest} {source}",

     # Command to sync build_path to web server
     'sync_cmd': '',

     # Command to open an URL with a web browser
     'run_browser_cmd': "start {url}",

     # LESS compiler command ({source} and {dest} will be replaced)
     'less_cmd': "lessc -x {source} > {dest}",

     # A list of markdown extensions
     'markdown_extensions': ['nl2br', 'grid', 'smartypants'],

     # Text editor command (use {file} for file name to edit)
     'editor_cmd': "$EDITOR '{file}'",

- Feed directory structure:

    - Directory will be treated as a *feed root* if it contains subdirectory named 'feed' which is standardized case-sensitive name (public-static doesn't use any kind of prefixes to indicate special directory name like __feed, because it looks ugly).
    - Feed directory could contain only standardized file names. Others ones will be ignored during the build process.
    - It's ok if the *feed root* contains ordinary page files.
    - If *feed root* contains pages and posts with a same name, pages will override posts.
    - In addition to the individual post pages, an archive and index pages will be generated in the feed root. Index will contain the latest post contents.
    - /feed-name/feed/YEAR/YYYY-MM-DD_post-name.md → /feed-name/post-name

Published field: yes/no (draft):

- Don't build pages which status is draft.
- Consider a command to switch draft/published status?

Image management:

- Image management command(s).
- No difference btw image and generic attachment.
- Separated directory for attachments.
- Publish on S3.
- Markdown syntax sugar for <img>.

Tags:

- Separate list pages for each tag.

Calculated @values generated from actual metadata, content and everything else:
- E.g. @words_count for a number of words.
- @reading_est for estimated reading time.
- Extensibility.

PDF generation:

- Build PDFs from markdown source on demand
- Output formats list in page header
- Consider to explicitly define PDF file name with header field

- http://www.verypdf.com/pdfcamp/convert-html-to-pdf.html
- https://github.com/chrisglass/xhtml2pdf

Markdown extension to include text files (preprocessor):

- Checkout Mustache (pystache) inclusion ability.
- Generalized commands: {command: arguments}, e.g. {include: footer.md}
- Possible syntax:

    {include:disclaimer.inc.md} — from the document directory
    {include:@disclaimer.md} — from the preconfigured path
    {include:footnotes.txt} — include plain text (include during postprocessing)

- Suggestion: To prevent fragments compillation as a separate pages, use '_' prefix. File name pattern could be configured with regex.
- Google Analytics integration.
- Disqus integration.

Markdown extension for QR:
- ...

See also:

- http://middlemanapp.com
- http://cloudhead.io/toto
- http://nanoc.stoneship.org
- http://bootswatch.com
- http://get-serve.com/, https://github.com/jlong/serve

- Haml Sucks for Content — http://chriseppstein.github.com/blog/2010/02/08/haml-sucks-for-content/
- Jade - robust, elegant, feature rich template engine for nodejs — https://github.com/visionmedia/jade
